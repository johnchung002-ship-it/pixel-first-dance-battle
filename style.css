function drawArrowSprite(ctx, x, y, size, lane) {
  ctx.save();
  ctx.translate(x, y);

  // Lane-specific colors
  const laneColors = ['#ff4d4d', '#4d94ff', '#4dff88', '#ffd24d']; // left=red, down=blue, up=green, right=yellow
  ctx.fillStyle = laneColors[lane];
  ctx.strokeStyle = '#000';
  ctx.lineWidth = 2;

  ctx.beginPath();

  switch (lane) {
    case 0: // Left
      ctx.moveTo(size, 0);
      ctx.lineTo(0, size * 0.5);
      ctx.lineTo(size, size);
      ctx.lineTo(size * 0.7, size);
      ctx.lineTo(size * 0.7, size * 0.65);
      ctx.lineTo(size * 0.3, size * 0.65);
      ctx.lineTo(size * 0.3, size * 0.35);
      ctx.lineTo(size * 0.7, size * 0.35);
      ctx.lineTo(size * 0.7, 0);
      ctx.closePath();
      break;

    case 1: // Down
      ctx.moveTo(0, 0);
      ctx.lineTo(size * 0.35, 0);
      ctx.lineTo(size * 0.35, size * 0.3);
      ctx.lineTo(size * 0.65, size * 0.3);
      ctx.lineTo(size * 0.65, 0);
      ctx.lineTo(size, 0);
      ctx.lineTo(size * 0.5, size);
      ctx.closePath();
      break;

    case 2: // Up
      ctx.moveTo(size * 0.5, 0);
      ctx.lineTo(size, size);
      ctx.lineTo(size * 0.65, size);
      ctx.lineTo(size * 0.65, size * 0.7);
      ctx.lineTo(size * 0.35, size * 0.7);
      ctx.lineTo(size * 0.35, size);
      ctx.lineTo(0, size);
      ctx.closePath();
      break;

    case 3: // Right
      ctx.moveTo(0, 0);
      ctx.lineTo(size, size * 0.5);
      ctx.lineTo(0, size);
      ctx.lineTo(size * 0.3, size);
      ctx.lineTo(size * 0.3, size * 0.65);
      ctx.lineTo(size * 0.7, size * 0.65);
      ctx.lineTo(size * 0.7, size * 0.35);
      ctx.lineTo(size * 0.3, size * 0.35);
      ctx.lineTo(size * 0.3, 0);
      ctx.closePath();
      break;
  }

  ctx.fill();
  ctx.stroke();
  ctx.restore();
}
